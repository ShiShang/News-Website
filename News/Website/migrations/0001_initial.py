# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-12-30 14:41
from __future__ import unicode_literals

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=40, verbose_name='Name')),
                ('Profile', models.TextField(max_length=256, verbose_name='Profile')),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=40, verbose_name='Name')),
                ('Email', models.EmailField(max_length=254, verbose_name='Email')),
                ('Comment', models.TextField(default='Comment', max_length=256, verbose_name='Comment')),
                ('Create_Date', models.DateField(auto_now_add=True, verbose_name='Create_Date')),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(max_length=40, verbose_name='Title')),
                ('Content', models.TextField(max_length=256, verbose_name='Content')),
                ('Create_Time', models.DateField(auto_now_add=True, verbose_name='Create_Time')),
                ('Modify_Time', models.DateField(verbose_name='Modify_Time')),
                ('Author', models.ForeignKey(default='None', on_delete=django.db.models.deletion.CASCADE, to='Website.Author', verbose_name='Author')),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Group', models.CharField(max_length=40, verbose_name='Group')),
                ('News', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Website.News', verbose_name='News')),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.')], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('Name', models.CharField(max_length=40, verbose_name='Name')),
                ('Birth', models.DateField(verbose_name='Birth')),
                ('Profile', models.TextField(default='No profile', max_length=256, verbose_name='Profile')),
                ('Create_Date', models.DateField(auto_now_add=True, verbose_name='Create_Date')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='author',
            name='News',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Website.News', verbose_name='News'),
        ),
    ]
